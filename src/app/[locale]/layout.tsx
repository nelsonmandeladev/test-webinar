import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Toaster } from "@/components";
import { LocalizationProvider } from "@/providers";
import { initTranslations, LOCALIZATION_NAMESPACES } from "@/locales";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{
    locale: string;
  }>;
}>) {
  const { locale } = await params;
  const { resources } = await initTranslations(locale, LOCALIZATION_NAMESPACES);
  return (
    <html lang={locale} suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased flex items-center justify-center`}
        suppressHydrationWarning
      >
        <LocalizationProvider locale={locale} resources={resources}>
          {children}
          <Toaster />
        </LocalizationProvider>

      </body>
    </html>
  );
}
